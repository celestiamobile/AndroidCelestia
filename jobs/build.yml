jobs:
- job: Build
  displayName: 'Build'
  pool:
    vmImage: 'ubuntu-latest'

  variables:
    outputFormat: ${{ parameters.outputFormat }}

  steps:
  - checkout: Celestia
    fetchDepth: 0
  - checkout: CelestiaContent
    fetchDepth: 0
  - checkout: CelestiaLocalization
    fetchDepth: 0
  - checkout: self
    fetchDepth: 0

  - script: |
      sudo apt update
      sudo apt install -y gettext
    displayName: 'Install Gettext'

  - task: NodeTool@0
    inputs:
      versionSource: 'spec'
      versionSpec: '14.9.0'
    displayName: 'Install Node.js'

  - script: |
      npm install -g appcenter-cli
    displayName: 'Install AppCenter-CLI'

  - script: |
      cd Celestia
      git checkout origin/$(Build.SourceBranchName)
      cd ../CelestiaLocalization
      git checkout origin/$(Build.SourceBranchName)
    displayName: 'Checkout Branch'
    condition: ne( variables['Build.Reason'], 'PullRequest' )

  - script: |
      cd Celestia
      git checkout origin/$(System.PullRequest.TargetBranch)
      cd ../CelestiaLocalization
      git checkout origin/$(System.PullRequest.TargetBranch)
    displayName: 'Checkout Branch (PR)'
    condition: eq( variables['Build.Reason'], 'PullRequest' )

  - script: |
      cd CelestiaContent
      git checkout 4b07c079d31c7b174d1a9d8efbf1db92f54fa05d
    displayName: 'Checkout Content'

  - script: |
      mkdir -p AndroidCelestia/Celestia/src/main/cpp/dependency/android
    displayName: 'Creating Directories for Third Party Dependencies'

  - task: UniversalPackages@0
    inputs:
      command: 'download'
      downloadDirectory: 'AndroidCelestia/Celestia/src/main/cpp/dependency/android'
      feedsToUse: 'internal'
      vstsFeed: '9f9dcde1-dcba-4537-8214-71c8a03b99a0/14bb1031-e6b2-40ac-b287-73e7fcb5900e'
      vstsFeedPackage: '8024e780-0af6-4980-8246-df6550e8d1b6'
      vstsPackageVersion: '0.0.9'
    displayName: 'Download Dependencies'

  - script: |
      cd AndroidCelestia
      mv Celestia/src/main/cpp/dependency/android/include/breakpad app/src/main/cpp/crash/include
      rsync -a --include '*/' --include 'libbreakpad_client.a' --exclude '*' Celestia/src/main/cpp/dependency/android/libs app/src/main/cpp/crash
    displayName: 'Move Dependencies'

  - script: |
      sed -i 's/APPCENTER-APP-ID/d1108985-aa25-4fb5-9269-31a70a87d28e/g' app/src/main/java/space/celestia/mobilecelestia/MainActivity.kt
      echo "New Content:"
      cat app/src/main/java/space/celestia/mobilecelestia/MainActivity.kt
    workingDirectory: '$(System.DefaultWorkingDirectory)/AndroidCelestia'
    displayName: 'Replace AppCenter Placeholders'

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
    displayName: 'Install Java 17'

  - task: Gradle@2
    inputs:
      workingDirectory: '$(system.defaultWorkingDirectory)/AndroidCelestia'
      gradleWrapperFile: '$(system.defaultWorkingDirectory)/AndroidCelestia/gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'assembleSideloadRelease'
    displayName: 'Build APK'
    condition: eq( variables['outputFormat'], 'apk' )

  - task: Gradle@2
    inputs:
      workingDirectory: '$(system.defaultWorkingDirectory)/AndroidCelestia'
      gradleWrapperFile: '$(system.defaultWorkingDirectory)/AndroidCelestia/gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'bundlePlayRelease'
    displayName: 'Build AAB'
    condition: eq( variables['outputFormat'], 'aab' )

  - task: AndroidSigning@3
    inputs:
      apkFiles: '$(system.defaultWorkingDirectory)/**/*.apk'
      apksign: true
      apksignerKeystoreFile: 'celestia.jks'
      apksignerKeystorePassword: '$(JARSIGNER_KEYSTORE_PASSWORD)'
      apksignerKeystoreAlias: 'celestia'
      apksignerKeyPassword: '$(JARSIGNER_KEY_PASSWORD)'
      zipalign: true
    displayName: 'Sign APK'
    condition: eq( variables['outputFormat'], 'apk' )

  - task: DownloadSecureFile@1
    name: keyStoreFile
    displayName: 'Download KeyStore File'
    inputs:
      secureFile: 'celestia.jks'
    condition: eq( variables['outputFormat'], 'aab' )

  - script: |
      jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore $(keyStoreFile.secureFilePath) -storepass $(JARSIGNER_KEYSTORE_PASSWORD) -keypass $(JARSIGNER_KEY_PASSWORD) $(system.defaultworkingdirectory)/AndroidCelestia/app/build/outputs/bundle/playRelease/*.aab celestia
    displayName: "Sign AAB"
    condition: eq( variables['outputFormat'], 'aab' )

  - script: |
      rm -rf $(system.defaultworkingdirectory)/AndroidCelestia/app/build/intermediates/intermediary_bundle/*
    displayName: 'Remove Redundant AAB'
    condition: eq( variables['outputFormat'], 'aab' )

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(system.defaultWorkingDirectory)'
      contents: '**/*.$(outputFormat)'
      targetFolder: '$(build.artifactStagingDirectory)'
      flattenFolders: true
    displayName: 'Copy APK/AAB'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: '$(outputFormat)'
      publishLocation: 'Container'
    displayName: 'Publish Build Artifacts'

  - script: |
      mkdir -p symbols
      cp -r $(system.defaultWorkingDirectory)/AndroidCelestia/app/build/intermediates/cxx/RelWithDebInfo/**/obj/* symbols
      cp -r $(system.defaultWorkingDirectory)/AndroidCelestia/Celestia/build/intermediates/cxx/RelWithDebInfo/**/obj/* symbols
      cp -r $(system.defaultWorkingDirectory)/AndroidCelestia/app/build/intermediates/native_symbol_tables/release/out/* symbols
      cd symbols
      zip -vr symbols.zip * -x "*.DS_Store"
      appcenter crashes upload-symbols --breakpad symbols.zip --app CelestiaProject/Celestia-1 --token $(APP_CENTER_TOKEN) --disable-telemetry --debug
    displayName: 'Upload Symbols'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'symbols/symbols.zip'
      ArtifactName: '$(outputFormat)-symbols'
      publishLocation: 'Container'
    displayName: 'Publish Symbols'
